@-webkit-keyframes spinAround {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(359deg);
            transform: rotate(359deg); } }

@keyframes spinAround {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(359deg);
            transform: rotate(359deg); } }

h1, h2, h3, h4, h5, h6 {
  font-family: "Comfortaa", "Bitter", serif; }

p a,
li a {
  text-decoration: underline; }

/*!
 * baguetteBox.js
 * @author  feimosi
 * @version %%INJECT_VERSION%%
 * @url https://github.com/feimosi/baguetteBox.js
 */
#baguetteBox-overlay {
  display: none;
  opacity: 0;
  position: fixed;
  overflow: hidden;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1000000;
  background-color: #222;
  background-color: rgba(0, 0, 0, 0.8);
  -webkit-transition: opacity .5s ease;
  transition: opacity .5s ease; }
  #baguetteBox-overlay.visible {
    opacity: 1; }
  #baguetteBox-overlay .full-image {
    display: inline-block;
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center; }
    #baguetteBox-overlay .full-image figure {
      display: inline;
      margin: 0;
      height: 100%; }
    #baguetteBox-overlay .full-image img {
      display: inline-block;
      width: auto;
      height: auto;
      max-height: 100%;
      max-width: 100%;
      vertical-align: middle;
      -webkit-box-shadow: 0 0 8px rgba(0, 0, 0, 0.6);
              box-shadow: 0 0 8px rgba(0, 0, 0, 0.6); }
    #baguetteBox-overlay .full-image figcaption {
      display: block;
      position: absolute;
      bottom: 0;
      width: 100%;
      text-align: center;
      line-height: 1.8;
      white-space: normal;
      color: #ccc;
      background-color: #000;
      background-color: rgba(0, 0, 0, 0.6);
      font-family: sans-serif; }
    #baguetteBox-overlay .full-image:before {
      content: "";
      display: inline-block;
      height: 50%;
      width: 1px;
      margin-right: -1px; }

#baguetteBox-slider {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  white-space: nowrap;
  -webkit-transition: left .4s ease, -webkit-transform .4s ease;
  transition: left .4s ease, -webkit-transform .4s ease;
  transition: left .4s ease, transform .4s ease;
  transition: left .4s ease, transform .4s ease, -webkit-transform .4s ease; }
  #baguetteBox-slider.bounce-from-right {
    -webkit-animation: bounceFromRight .4s ease-out;
            animation: bounceFromRight .4s ease-out; }
  #baguetteBox-slider.bounce-from-left {
    -webkit-animation: bounceFromLeft .4s ease-out;
            animation: bounceFromLeft .4s ease-out; }

@-webkit-keyframes bounceFromRight {
  0% {
    margin-left: 0; }
  50% {
    margin-left: -30px; }
  100% {
    margin-left: 0; } }

@keyframes bounceFromRight {
  0% {
    margin-left: 0; }
  50% {
    margin-left: -30px; }
  100% {
    margin-left: 0; } }

@-webkit-keyframes bounceFromLeft {
  0% {
    margin-left: 0; }
  50% {
    margin-left: 30px; }
  100% {
    margin-left: 0; } }

@keyframes bounceFromLeft {
  0% {
    margin-left: 0; }
  50% {
    margin-left: 30px; }
  100% {
    margin-left: 0; } }

.baguetteBox-button#next-button, .baguetteBox-button#previous-button {
  top: 50%;
  top: calc(50% - 30px);
  width: 44px;
  height: 60px; }

.baguetteBox-button {
  position: absolute;
  cursor: pointer;
  outline: none;
  padding: 0;
  margin: 0;
  border: 0;
  border-radius: 15%;
  background-color: #323232;
  background-color: rgba(50, 50, 50, 0.5);
  color: #ddd;
  font: 1.6em sans-serif;
  -webkit-transition: background-color .4s ease;
  transition: background-color .4s ease; }
  .baguetteBox-button:focus, .baguetteBox-button:hover {
    background-color: rgba(50, 50, 50, 0.9); }
  .baguetteBox-button#next-button {
    right: 2%; }
  .baguetteBox-button#previous-button {
    left: 2%; }
  .baguetteBox-button#close-button {
    top: 20px;
    right: 2%;
    right: calc(2% + 6px);
    width: 30px;
    height: 30px; }
  .baguetteBox-button svg {
    position: absolute;
    left: 0;
    top: 0; }

/*
    Preloader
    Borrowed from http://tobiasahlin.com/spinkit/
*/
.baguetteBox-spinner {
  width: 40px;
  height: 40px;
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -20px;
  margin-left: -20px; }

.baguetteBox-double-bounce1,
.baguetteBox-double-bounce2 {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: #fff;
  opacity: .6;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-animation: bounce 2s infinite ease-in-out;
          animation: bounce 2s infinite ease-in-out; }

.baguetteBox-double-bounce2 {
  -webkit-animation-delay: -1s;
          animation-delay: -1s; }

@-webkit-keyframes bounce {
  0%, 100% {
    -webkit-transform: scale(0);
            transform: scale(0); }
  50% {
    -webkit-transform: scale(1);
            transform: scale(1); } }

@keyframes bounce {
  0%, 100% {
    -webkit-transform: scale(0);
            transform: scale(0); }
  50% {
    -webkit-transform: scale(1);
            transform: scale(1); } }

/**
 * prism.js default theme for JavaScript, CSS and HTML
 * Based on dabblet (http://dabblet.com)
 * @author Lea Verou
 */
code[class*="language-"],
pre[class*="language-"] {
  color: black;
  background: none;
  text-shadow: 0 1px white;
  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  line-height: 1.5;
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
  -webkit-hyphens: none;
  -ms-hyphens: none;
  hyphens: none; }

pre[class*="language-"]::-moz-selection, pre[class*="language-"] ::-moz-selection,
code[class*="language-"]::-moz-selection, code[class*="language-"] ::-moz-selection {
  text-shadow: none;
  background: #b3d4fc; }

pre[class*="language-"]::selection, pre[class*="language-"] ::selection,
code[class*="language-"]::selection, code[class*="language-"] ::selection {
  text-shadow: none;
  background: #b3d4fc; }

@media print {
  code[class*="language-"],
  pre[class*="language-"] {
    text-shadow: none; } }

/* Code blocks */
pre[class*="language-"] {
  padding: 1em;
  margin: .5em 0;
  overflow: auto; }

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
  background: #f5f2f0; }

/* Inline code */
:not(pre) > code[class*="language-"] {
  padding: .1em;
  border-radius: .3em;
  white-space: normal; }

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: slategray; }

.token.punctuation {
  color: #999; }

.namespace {
  opacity: .7; }

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
  color: #905; }

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
  color: #690; }

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
  color: #9a6e3a;
  background: rgba(255, 255, 255, 0.5); }

.token.atrule,
.token.attr-value,
.token.keyword {
  color: #07a; }

.token.function,
.token.class-name {
  color: #DD4A68; }

.token.regex,
.token.important,
.token.variable {
  color: #e90; }

.token.important,
.token.bold {
  font-weight: bold; }

.token.italic {
  font-style: italic; }

.token.entity {
  cursor: help; }

header .header-top {
  -webkit-box-shadow: 0 0 10px 1px #2c2d32;
          box-shadow: 0 0 10px 1px #2c2d32;
  z-index: 1000;
  position: relative; }
  header .header-top .topbar {
    padding: 0.5rem 0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
    header .header-top .topbar .navbar-item a {
      color: #026094; }
      header .header-top .topbar .navbar-item a:hover {
        color: #2c2d32; }
      header .header-top .topbar .navbar-item a i {
        font-size: 2em;
        padding-right: 0.5rem; }
      header .header-top .topbar .navbar-item a address, header .header-top .topbar .navbar-item a span {
        line-height: 2em; }
    header .header-top .topbar .navbar-end {
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center; }
    header .header-top .topbar form {
      margin-right: 1rem;
      padding: 0; }
  header .header-top .navbar {
    -webkit-transition: height 0.4s linear;
    transition: height 0.4s linear;
    height: 136px; }
    header .header-top .navbar .container {
      padding: 0 1rem; }
      header .header-top .navbar .container .navbar-brand {
        padding: 0.5rem 0; }
        header .header-top .navbar .container .navbar-brand a {
          display: -webkit-box;
          display: -ms-flexbox;
          display: flex;
          height: 100%;
          -webkit-transition: all .2s ease-in-out;
          transition: all .2s ease-in-out; }
          header .header-top .navbar .container .navbar-brand a:hover {
            -webkit-transform: scale(1.1);
                -ms-transform: scale(1.1);
                    transform: scale(1.1); }
        header .header-top .navbar .container .navbar-brand img {
          height: 120px;
          width: 120px;
          -webkit-transition: all 0.4s linear;
          transition: all 0.4s linear; }
      header .header-top .navbar .container .navbar-menu-content {
        height: 100%; }
      header .header-top .navbar .container .top-navigation {
        font-size: 1.2em;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-line-pack: stretch;
            align-content: stretch;
        margin: auto;
        height: 100%; }
        header .header-top .navbar .container .top-navigation .navbar-item.has-dropdown {
          height: 100%; }
        header .header-top .navbar .container .top-navigation .navbar-item .navbar-link {
          background-color: transparent; }
        header .header-top .navbar .container .top-navigation .navbar-dropdown .navbar-item {
          padding-top: 0.5rem;
          padding-bottom: 0.5rem; }
        header .header-top .navbar .container .top-navigation .navbar-dropdown .navbar-link {
          padding-left: 0;
          width: 100%; }
        header .header-top .navbar .container .top-navigation .navbar-dropdown .navbar-dropdown {
          display: none;
          top: 0;
          left: 100%; }
        header .header-top .navbar .container .top-navigation .navbar-dropdown .is-hoverable .navbar-link {
          padding-top: 0;
          padding-bottom: 0; }
      header .header-top .navbar .container .navbar-reservation {
        margin: auto; }

header .hero .title {
  text-shadow: 4px 8px 16px #0a0a0a;
  line-height: 1.5em; }

header .hero .subtitle {
  margin-top: 1rem; }

header .hero.hero-image {
  background: -webkit-gradient(linear, left top, left bottom, from(rgba(2, 96, 148, 0.8))), url(../images/header-bg.png) no-repeat center bottom;
  background: linear-gradient(rgba(2, 96, 148, 0.8)), url(../images/header-bg.png) no-repeat center bottom;
  background-size: cover;
  max-height: 620px; }

header address {
  font-style: normal; }

header.sticky .navbar {
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  height: 86px;
  padding: 0;
  -webkit-box-shadow: 0 0 10px 1px #2c2d32;
          box-shadow: 0 0 10px 1px #2c2d32;
  -webkit-animation-duration: 3s;
          animation-duration: 3s;
  -webkit-animation-name: slideInDown;
          animation-name: slideInDown;
  -webkit-animation-iteration-count: 1;
          animation-iteration-count: 1;
  -webkit-animation-direction: normal;
          animation-direction: normal; }
  header.sticky .navbar .container .navbar-brand img {
    height: 70px;
    width: 70px; }

#header-reservation {
  border-radius: 45px;
  background: #2c2d32 no-repeat center;
  display: inline-block;
  vertical-align: middle;
  text-align: center;
  color: transparent;
  padding: 0.3rem 1rem;
  border: solid 2px white;
  white-space: nowrap; }
  #header-reservation .text {
    color: #caeafc; }
  #header-reservation .ballejaune {
    display: block;
    width: 100%;
    min-width: 150px;
    min-height: 30px;
    background: url("../images/dark-ballejaune.png") no-repeat center bottom;
    background-size: 142.5px 28.75px; }
  #header-reservation:hover {
    background: white;
    border: solid 2px #2c2d32; }
    #header-reservation:hover .text {
      color: #2c2d32; }
    #header-reservation:hover .ballejaune {
      background: url("../images/dark-ballejaune-reverse.png") no-repeat center bottom;
      background-size: 142.5px 28.75px; }

/*****************/
/** RESPONSIVE  **/
/*****************/
@media screen and (min-width: 1088px) {
  header .header-top .navbar .container .navbar-reservation {
    margin: auto 0; }
  header .header-top .navbar .container .navbar-menu {
    margin: 0 auto;
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0; }
    header .header-top .navbar .container .navbar-menu .navbar-dropdown .navbar-item:hover {
      background-color: #fafafa !important; }
    header .header-top .navbar .container .navbar-menu .navbar-dropdown .navbar-link:after {
      -webkit-transform: rotate(-135deg);
          -ms-transform: rotate(-135deg);
              transform: rotate(-135deg);
      margin-top: -0.3em;
      right: 0; }
    header .header-top .navbar .container .navbar-menu .navbar-dropdown .is-hoverable:hover > .navbar-dropdown {
      display: block !important; } }

@media screen and (max-width: 1280px) {
  header .container {
    max-width: none;
    width: 100%;
    margin: 0 2rem; }
    header .container .navbar-link {
      padding-right: 2.1em; } }

@media screen and (max-width: 1088px) {
  header .container {
    margin: 0; }
  header .header-top .topbar {
    padding: 0.5rem 0 0.5rem 0.5rem; }
    header .header-top .topbar .navbar-item {
      padding: 0.3rem 0.4rem; }
      header .header-top .topbar .navbar-item a *:nth-child(2) {
        display: none; }
    header .header-top .topbar .navbar-start {
      margin-right: auto;
      padding-right: 0.5rem; }
    header .header-top .topbar form {
      margin-right: 0.5rem; }
  header .header-top .navbar {
    height: auto; }
    header .header-top .navbar .container {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center;
      padding: 0; }
      header .header-top .navbar .container .navbar-brand {
        -webkit-box-ordinal-group: 2;
            -ms-flex-order: 1;
                order: 1;
        margin: 0 auto 0 0.2rem; }
        header .header-top .navbar .container .navbar-brand img {
          height: 80px;
          width: 80px; }
      header .header-top .navbar .container .navbar-reservation {
        -webkit-box-ordinal-group: 3;
            -ms-flex-order: 2;
                order: 2; }
        header .header-top .navbar .container .navbar-reservation #header-reservation .ballejaune {
          min-width: 120px;
          min-height: 24px;
          background-size: 114px 23px; }
      header .header-top .navbar .container .navbar-burger {
        -webkit-box-ordinal-group: 4;
            -ms-flex-order: 3;
                order: 3;
        min-width: 3.25rem;
        margin: 0 0.2rem 0 auto;
        height: 100%;
        text-align: center; }
        header .header-top .navbar .container .navbar-burger:hover {
          background: none; }
        header .header-top .navbar .container .navbar-burger .fas {
          padding: 1.5rem 1rem; }
      header .header-top .navbar .container .navbar-menu {
        display: block;
        position: fixed;
        z-index: 1000;
        top: 0;
        bottom: 0;
        right: -102%;
        width: 100%;
        min-height: 100vh;
        overflow: auto;
        padding: 0;
        -webkit-transition: all 0.3s ease-in-out;
        transition: all 0.3s ease-in-out;
        background: transparent; }
        header .header-top .navbar .container .navbar-menu .navbar-menu-content {
          width: 80%;
          min-height: 100%;
          height: auto;
          margin: 0 0 0 auto;
          background: #2c2d32;
          -webkit-box-shadow: 0 0 6px 0;
                  box-shadow: 0 0 6px 0; }
          header .header-top .navbar .container .navbar-menu .navbar-menu-content .top-navigation {
            -webkit-box-orient: vertical;
            -webkit-box-direction: normal;
                -ms-flex-direction: column;
                    flex-direction: column;
            height: auto;
            padding-top: 6rem;
            padding-bottom: 6rem; }
            header .header-top .navbar .container .navbar-menu .navbar-menu-content .top-navigation div.navbar-item {
              padding: 0.25rem 0; }
              header .header-top .navbar .container .navbar-menu .navbar-menu-content .top-navigation div.navbar-item .navbar-link {
                color: #d1a633;
                padding: 0.5rem 2.5rem 0.5rem 1.5rem; }
              header .header-top .navbar .container .navbar-menu .navbar-menu-content .top-navigation div.navbar-item.has-dropdown {
                height: auto; }
                header .header-top .navbar .container .navbar-menu .navbar-menu-content .top-navigation div.navbar-item.has-dropdown .navbar-link:after {
                  -webkit-transform: rotate(-135deg);
                      -ms-transform: rotate(-135deg);
                          transform: rotate(-135deg);
                  display: block;
                  right: 2rem; }
                header .header-top .navbar .container .navbar-menu .navbar-menu-content .top-navigation div.navbar-item.has-dropdown .navbar-link.is-active {
                  background-color: inherit; }
                  header .header-top .navbar .container .navbar-menu .navbar-menu-content .top-navigation div.navbar-item.has-dropdown .navbar-link.is-active:after {
                    -webkit-transform: rotate(-45deg);
                        -ms-transform: rotate(-45deg);
                            transform: rotate(-45deg); }
            header .header-top .navbar .container .navbar-menu .navbar-menu-content .top-navigation a.navbar-item {
              color: #caeafc; }
            header .header-top .navbar .container .navbar-menu .navbar-menu-content .top-navigation .navbar-dropdown {
              display: none;
              font-size: 1rem;
              color: #caeafc;
              background: #404146; }
              header .header-top .navbar .container .navbar-menu .navbar-menu-content .top-navigation .navbar-dropdown a.navbar-item, header .header-top .navbar .container .navbar-menu .navbar-menu-content .top-navigation .navbar-dropdown a.navbar-link {
                padding-left: 3.5rem; }
                header .header-top .navbar .container .navbar-menu .navbar-menu-content .top-navigation .navbar-dropdown a.navbar-item.is-active, header .header-top .navbar .container .navbar-menu .navbar-menu-content .top-navigation .navbar-dropdown a.navbar-link.is-active {
                  background: none; }
              header .header-top .navbar .container .navbar-menu .navbar-menu-content .top-navigation .navbar-dropdown .navbar-dropdown {
                background: #54555a; }
                header .header-top .navbar .container .navbar-menu .navbar-menu-content .top-navigation .navbar-dropdown .navbar-dropdown.is-active {
                  background: #54555a !important; }
                header .header-top .navbar .container .navbar-menu .navbar-menu-content .top-navigation .navbar-dropdown .navbar-dropdown .navbar-item {
                  padding-left: 5.5rem; }
              header .header-top .navbar .container .navbar-menu .navbar-menu-content .top-navigation .navbar-dropdown.is-active {
                display: block;
                background: #404146 !important; }
        header .header-top .navbar .container .navbar-menu .navbar-burger {
          position: absolute;
          top: 0;
          right: 0;
          z-index: 1000;
          height: auto;
          color: white; }
        header .header-top .navbar .container .navbar-menu.is-active {
          right: 0; }
  header .hero .hero-body {
    padding: 3rem 1.5rem; }
    header .hero .hero-body h1.title {
      font-size: 1.6rem;
      white-space: nowrap; }
      header .hero .hero-body h1.title strong {
        margin-left: -6px; }
      header .hero .hero-body h1.title span {
        display: none; }
        header .hero .hero-body h1.title span:last-child {
          display: inline; }
    header .hero .hero-body .subtitle {
      margin-top: 1rem; }
  header.sticky .container .navbar-burger {
    margin-top: 0.6rem; }
  header.sticky .header-top .navbar .navbar-reservation {
    top: 0.6rem; } }

#footer {
  background-color: #2c2d32;
  color: white;
  position: relative;
  margin: auto; }
  #footer .top {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    max-width: 1472px;
    margin: auto;
    padding-left: 1rem;
    -ms-flex-pack: distribute;
        justify-content: space-around; }
    #footer .top .footer-title {
      font-variant: small-caps;
      font-weight: bold;
      font-size: 1.3em;
      margin: 2rem 0 0.5rem 0; }
    #footer .top a {
      white-space: nowrap; }
      #footer .top a i.fa-caret-right {
        color: #d1a633;
        padding-right: 0.5rem;
        padding-left: 2px; }
      #footer .top a i.fa-user-lock {
        padding-left: 0.2rem; }
      #footer .top a:hover {
        color: #caeafc; }
        #footer .top a:hover i {
          color: #caeafc; }
    #footer .top .col-footer {
      padding: 0 0.5rem 1rem 0;
      position: relative; }
    #footer .top .col-footer-contact address span {
      white-space: nowrap; }
    #footer .top .embed-icon {
      border-radius: 15px;
      background-repeat: no-repeat;
      background-position: center;
      display: inline-block;
      vertical-align: middle;
      margin-left: 2px;
      color: transparent;
      height: 33px; }
      #footer .top .embed-icon.ballejaune {
        background-image: url("../images/dark-ballejaune.png");
        background-size: 150px 30px;
        width: 172px;
        margin-left: -6px; }
      #footer .top .embed-icon.facebook {
        background-image: url("../images/facebook-circle.png");
        background-size: 33px 33px;
        width: 33px; }
    #footer .top a:hover .ballejaune {
      background-image: url("../images/light-ballejaune.png"); }
  #footer .bottom {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    background-color: #026094;
    padding: 1rem;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    font-size: 0.9em; }
    #footer .bottom p {
      margin-bottom: 0; }
    #footer .bottom .copyright {
      text-align: center; }
      #footer .bottom .copyright a {
        white-space: nowrap; }
        #footer .bottom .copyright a:hover {
          color: #caeafc; }
  #footer .item address {
    margin-bottom: 1rem; }
  #footer .private-access {
    display: none;
    position: absolute;
    bottom: 0;
    opacity: 0.5; }
  #footer .widget-getvisitors {
    font-style: italic;
    white-space: nowrap; }

/*****************/
/** RESPONSIVE  **/
/*****************/
@media screen and (max-width: 1472px) {
  #footer .top {
    max-width: 1280px; } }

@media screen and (max-width: 1280px) {
  #footer .top {
    max-width: 1088px; } }

@media screen and (max-width: 1088px) {
  #footer {
    font-size: 0.9rem; }
    #footer .top {
      max-width: 769px; }
    #footer .bottom {
      font-size: 0.8rem; }
      #footer .bottom .copyright {
        text-align: right; }
      #footer .bottom .empty {
        display: none; } }

@media screen and (min-width: 769px) and (max-width: 1088px) {
  #footer .top .col-footer {
    -webkit-box-flex: 2;
        -ms-flex: 2;
            flex: 2; }
    #footer .top .col-footer.col-footer-book-join {
      -webkit-box-flex: unset;
          -ms-flex: unset;
              flex: unset;
      width: 100%;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
          -ms-flex-direction: column;
              flex-direction: column;
      -webkit-box-flex: 1;
          -ms-flex: 1;
              flex: 1; }
      #footer .top .col-footer.col-footer-book-join .sub-col {
        -webkit-box-flex: 2;
            -ms-flex: 2;
                flex: 2; } }

@media screen and (max-width: 769px) {
  #footer .top {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    padding-left: 0; }
    #footer .top p {
      margin-bottom: 0.3rem; }
    #footer .top .col-footer {
      width: 300px;
      -webkit-box-flex: unset;
          -ms-flex: unset;
              flex: unset;
      margin: auto; }
      #footer .top .col-footer.col-footer-book-join {
        display: block;
        width: 300px; }
        #footer .top .col-footer.col-footer-book-join .sub-col {
          width: 100%;
          -webkit-box-flex: unset;
              -ms-flex: unset;
                  flex: unset; }
  #footer .bottom {
    font-size: 0.8rem; }
    #footer .bottom .copyright {
      text-align: right; }
    #footer .bottom .empty {
      display: none; } }

@media screen and (min-width: 1088px) {
  #footer .top {
    padding-bottom: 1rem; }
  #footer .private-access {
    display: block; } }

#main-content.under-sticky {
  padding-top: 4rem; }

.columns.white-framed {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background: -webkit-gradient(linear, left top, right top, color-stop(50%, white), to(#f0f0f0));
  background: linear-gradient(to right, white 50%, #f0f0f0);
  padding-left: 2rem; }
  .columns.white-framed .column img {
    border: solid 8px #026094; }
  .columns.white-framed .column:last-child {
    padding-right: 0; }

.columns.block {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse;
  margin-bottom: 4rem; }
  .columns.block h2 {
    color: #d1a633; }
    .columns.block h2 a {
      color: #d1a633; }
      .columns.block h2 a:hover {
        color: #2c2d32; }
  .columns.block.block-with-image .block-content {
    margin-top: 5rem; }
  .columns.block .block-image {
    -webkit-box-flex: 0;
        -ms-flex-positive: 0;
            flex-grow: 0;
    background-color: #026094;
    margin-right: 6rem;
    padding-right: 0;
    max-width: 45%; }
    .columns.block .block-image .image {
      margin: 3rem 0;
      left: 3rem;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      text-align: center;
      -webkit-transition: all .2s ease-in-out;
      transition: all .2s ease-in-out;
      max-width: 100% !important;
      max-height: 100% !important;
      border: white solid 8px;
      overflow: hidden; }
      .columns.block .block-image .image .see-more {
        display: none;
        font-size: 3em;
        background: -webkit-gradient(linear, left top, left bottom, from(rgba(230, 230, 230, 0.6)));
        background: linear-gradient(rgba(230, 230, 230, 0.6));
        color: #2c2d32;
        margin: auto;
        padding: 20%; }
      .columns.block .block-image .image:hover {
        -webkit-transform: scale(0.95);
            -ms-transform: scale(0.95);
                transform: scale(0.95); }
        .columns.block .block-image .image:hover .see-more {
          display: inline-block; }
  .columns.block .block-content {
    -webkit-box-flex: 2;
        -ms-flex-positive: 2;
            flex-grow: 2; }
    .columns.block .block-content h3 {
      font-size: 1.6em;
      color: #026094; }
    .columns.block .block-content .see-more {
      margin-top: 2rem; }
    .columns.block .block-content p {
      margin-bottom: 0.6rem; }
    .columns.block .block-content ul li:before {
      font-family: "Font Awesome 5 Free";
      content: '\f058';
      padding-right: 0.4rem;
      font-weight: bold; }
  .columns.block.block-even {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row; }
    .columns.block.block-even h2 {
      color: #026094; }
      .columns.block.block-even h2 a {
        color: #026094; }
        .columns.block.block-even h2 a:hover {
          color: #2c2d32; }
    .columns.block.block-even .block-image {
      margin-left: 5rem;
      padding-left: 0;
      background-color: #d1a633; }
      .columns.block.block-even .block-image .image {
        left: auto;
        right: 3rem; }

.matches {
  background-color: white; }

/*****************/
/** RESPONSIVE  **/
/*****************/
@media screen and (max-width: 1280px) {
  #main-content.under-sticky {
    padding-top: 1rem; } }

.matches .container h2.title {
  margin-bottom: 3rem;
  color: #026094; }

.matches .container .columns {
  background-color: #2c2d32; }

.matches .container h3.title {
  color: white; }

.matches .container .box {
  height: 100%; }

.matches .container .table {
  background-color: #f0f0f0;
  border-collapse: separate; }
  .matches .container .table th {
    color: #d1a633; }
  .matches .container .table td {
    vertical-align: middle; }
  .matches .container .table a {
    color: #2c2d32;
    padding: 0.5rem; }
    .matches .container .table a:hover {
      color: #d1a633; }
  .matches .container .table .hour {
    text-align: center;
    width: 20%;
    white-space: nowrap;
    cursor: help; }
  .matches .container .table .first-team {
    text-align: right;
    width: 25%; }
  .matches .container .table .score {
    width: 10%;
    white-space: nowrap;
    text-align: center; }
    .matches .container .table .score span {
      color: white;
      border-radius: 12px;
      padding: 5px; }
      .matches .container .table .score span.win {
        background: #3e603d; }
      .matches .container .table .score span.lost {
        background: #8f0000; }
      .matches .container .table .score span.draw {
        background: #ac561d; }
  .matches .container .table .second-team {
    text-align: left;
    width: 25%; }
  .matches .container .table .action {
    width: 20%;
    text-align: right;
    font-size: 1.3em; }
  .matches .container .table .home {
    color: #026094;
    font-weight: 600; }

.matches .updated-at {
  background-color: #2c2d32;
  text-align: right;
  color: white;
  font-style: italic;
  margin: 0 -1.5rem;
  padding-right: 1.5rem;
  padding-bottom: 1rem;
  font-size: 0.8em;
  position: relative;
  top: -1rem; }

.visually-hidden:not(:focus):not(:active) {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px); }

.skip-link {
  font-family: "Comfortaa", "Bitter", serif;
  font-size: 1.5rem;
  font-weight: bold;
  position: absolute;
  top: 60px;
  z-index: 1; }

.navbar-brand .navbar-item {
  font-family: "Comfortaa", "Bitter", serif;
  font-size: 1.5rem;
  font-weight: bold; }

.navbar-end {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (max-width: 768px) {
    .navbar-end form {
      padding: 1rem; }
      .navbar-end form .control:first-child {
        width: 100%; } }

.notification ul {
  margin: 0.5em 1.4em;
  list-style-type: disc; }

.teaser {
  margin: 1rem 0; }

.card {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 100%; }

.card-content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 100%; }
  .card-content .button:last-child {
    margin-top: auto; }

.section-latest-entries .buttons {
  margin-top: 1.5rem; }

.tags {
  margin-top: 3rem; }
  .tags .label {
    margin-right: .5em; }

.section-record .image {
  margin-top: 3rem;
  margin-bottom: 3rem; }

.button {
  text-decoration: none; }

p.meta {
  margin-top: 1rem;
  color: #026094;
  font-size: 90%; }

@media screen and (max-width: 768px) {
  .media {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column; } }

.media-right {
  -ms-flex-negative: 1;
      flex-shrink: 1;
  margin-left: 0; }
  @media screen and (max-width: 768px) {
    .media-right {
      -webkit-box-ordinal-group: 0;
          -ms-flex-order: -1;
              order: -1;
      width: 100%;
      margin-bottom: 1rem; } }

.imageholder img {
  width: 100%; }

.notification > .delete {
  right: .5rem;
  top: .5rem; }

.hero-image {
  background-repeat: no-repeat;
  background-position: center center !important;
  background-size: cover; }

.hero .hero-body {
  padding-bottom: 4rem;
  padding-top: 4rem; }
  .hero .hero-body h1.title,
  .hero .hero-body h2.subtitle {
    text-shadow: 2px 2px 15px rgba(0, 0, 0, 0.4); }
    .hero .hero-body h1.title strong,
    .hero .hero-body h2.subtitle strong {
      font-weight: bold; }
  .hero .hero-body h1.title {
    font-size: 2.6rem; }
  .hero .hero-body h2.subtitle {
    margin-top: 2rem;
    font-size: 1.1rem;
    font-family: "Raleway", "Roboto", sans-serif; }
  @media screen and (min-width: 769px), print {
    .hero .hero-body {
      padding-bottom: 12rem;
      padding-top: 12rem; }
      .hero .hero-body h1.title {
        font-size: 3.25rem; }
      .hero .hero-body h2.subtitle {
        font-size: 1.375rem; } }
  @media screen and (min-width: 1088px) {
    .hero .hero-body {
      padding-bottom: 16rem;
      padding-top: 16rem; }
      .hero .hero-body h1.title {
        font-size: 3.9rem; }
      .hero .hero-body h2.subtitle {
        font-size: 1.65rem; } }

.footer {
  padding: 2rem 1.5rem; }

[data-background-image] {
  position: relative; }

[data-background-image] .dark-overlay {
  /*	This is the element that is going to darken the background image
	By default, it's entirely black, but the JS code will give it
	some transparency by setting its opacity to a calculated value.
	The brighter the image, the higher the opacity, to compensate ! */
  content: "";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: black; }

pre .tag {
  margin: 0;
  padding: 0;
  background-color: transparent;
  display: inherit;
  font-size: inherit; }

pre .number {
  font-size: 1em; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
