{# This file might seem a little complex, because of the high density of tags.
   It uses Twig macros and ternary selectors. Read up on them, if required:
   macros: http://twig.sensiolabs.org/doc/templates.html#macros
   ternary operators: http://twig.sensiolabs.org/doc/templates.html#other-operators
#}

{# Make sure the setting for the submenus is defined. #}
{% if submenuLevel is not defined %}
    {% set submenuLevel = 1 %}
{% endif %}

{# The 'recursive' macro, for inserting one menu item. If it has a submenu, it
   invokes itself to insert the items of the submenus. #}
{% macro display_menu_item(item, loop, extraclass, submenuLevel) %}
    {% from _self import display_menu_item %}
    {% spaceless %}
    {% if item.submenu|default is empty %}
    <a href="{{ item.link }}" title='{{ item.title|default('')|escape }}' class='navbar-item {{ item|current ? 'is-active' }} {{ item.class|default('') }}'>
        {{- item.label|default('-') -}}
    </a>
    {% endif %}

    {% if item.submenu is defined and submenuLevel %}
    <div class="navbar-item
        {{ (item.submenu|default(false) and submenuLevel) ? ' has-dropdown is-hoverable' -}}">

        {% if item.path is defined %}
            <a href="{{ item.link }}" title='{{ item.title|default('')|escape }}' class='navbar-link {{ item|current ? 'is-active' }}{{ item.class|default('') }}'>
                {{- item.label|default('-') -}}
            </a>
        {% else %}
            <span title='{{ item.title|default('')|escape }}' class='navbar-link {{ item|current ? 'is-active' }}{{ item.class|default('') }}'>
                {{- item.label|default('-') -}}
            </span>
        {% endif %}

        <div class="navbar-dropdown {{ (submenuLevel > 1) ? 'navbar-submenu' -}}">
            {% for submenu in item.submenu|default %}
                {{ display_menu_item(submenu, loop, '', submenuLevel+1) }}
            {% endfor %}
        </div>
    </div>
    {% endif %}
    {% endspaceless %}
{% endmacro %}

{# Make the macro available for use #}
{% from _self import display_menu_item %}

{# The main menu loop: Iterates over the items, calling `display_menu_item` #}
{% for item in menu %}
    {% if item.label is defined %}
        {{ display_menu_item(item, loop, '', submenuLevel) }}
    {% endif %}
{% endfor %}
